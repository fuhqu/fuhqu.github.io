import type { NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import { Octokit } from 'octokit'
import styles from '../styles/Home.module.css'

type Gist = { id: string; description: string; createdAt: string; updatedAt: string }

const Home: NextPage<{ gists: Gist[] }> = ({ gists }) => {
  return (
    <div className={styles.container}>
      <Head>
        <title>fuhqu</title>
        <meta name='description' content='Generated by fuhqu' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>fuhqu</h1>
        <ul>
          {gists.map(gist => {
            return (
              <li key={gist.id}>
                <div>
                  <p>{gist.description}</p>
                  <p>{gist.createdAt}</p>
                </div>
              </li>
            )
          })}
        </ul>
        {/* <p className={styles.description}>Hello world.</p> */}

        {/* <div className={styles.grid}></div> */}
      </main>

      <footer className={styles.footer}>
        <a
          href='https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app'
          target='_blank'
          rel='noopener noreferrer'
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src='/vercel.svg' alt='Vercel Logo' width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}

// This function gets called at build time on server-side.
// It won't be called on client-side, so you can even do
// direct database queries.
export async function getStaticProps() {
  const octokit = new Octokit({ auth: process.env.GH_AUTH })
  const gistsRes = await octokit.request(`GET /gists`)

  const gists: Gist[] = gistsRes.data.map(gist => {
    return {
      id: gist.id,
      description: gist.description || '',
      createdAt: gist.created_at,
      updatedAt: gist.updated_at,
    }
  })

  // By returning { props: { posts } }, the Blog component
  // will receive `posts` as a prop at build time
  return {
    props: {
      gists,
    },
  }
}

export default Home
